#!/usr/bin/python3

from math import *
import sys

def to_int(arg):
    try:
        return int(arg)
    except ValueError:
        exit(84)

def to_float(arg):
    try:
        return float(arg)
    except ValueError:
        exit(84)

if sys.argv[1] == '-h':
    print("USAGE\n\t./106bombyx n [k | i0 i1]\n")
    print("DESCRIPTION")
    print("\tn\t\tnumber of first generation individuals")
    print("\tk\t\tgrowth rate from 1 to 4")
    print("\ti0\t\tinitial generation (included)")
    print("\ti1\t\tfinal generation (included)")

if len(sys.argv) < 3 or len(sys.argv) > 4:
    exit(84)

def case_1() :
    n = to_int(sys.argv[1])
    if (n < 1):
        exit(84)
    k = to_float(sys.argv[2])
    if (k < 1 or k > 4) :
        exit(84)
    xm = n
    for loop in range (100) :
        if (xm < 0):
            printf(loop + 1, "0.00")
        else:
            print(loop + 1, "%.2f" %(xm))
        xm = k * xm * (1000 - xm) / 1000

def case_2() :
    n = to_int(sys.argv[1])
    if (n < 1):
        exit(84)
    x1 = to_int(sys.argv[2])
    x2 = to_int(sys.argv[3])
    if (x2 < 0 or x1 < 0):
        exit(84)
    xm = n
    k = 1.00
    if (x1 > x2) :
        exit(84)
    while k <= 4 :
        for i in range (1, x1):
            xm = (k * xm) * (1000 - xm) / 1000
        while x1 <= x2 :
            if (xm < 0):
                print("%.2f 0.00" %(k))
            else:
                print("%.2f %.2f" %(k, xm))
            xm = (k * xm) * (1000 - xm) / 1000
            x1 += 1
        xm = to_int(sys.argv[1])
        x1 = to_int(sys.argv[2])
        k += 0.01

if (len(sys.argv) == 3) :
    case_1()
elif (len(sys.argv) == 4):
    case_2()
